language: python
python: "3.7"

jobs:
  include:
    - stage: "Native host build and tests"
      name: "Unit and database tests"
      install:
        - pip install --quiet .
        - pip install --quiet -r dev-requirements.txt
      before_script:
        - docker run -d --env POSTGRES_USER=transiter --env POSTGRES_PASSWORD=transiter --env POSTGRES_DB=transiter -p 5432:5432 postgres:12
      script:
        - coverage run --source=transiter --omit="transiter/alembic/*","*pb2/*" -m pytest --color=yes tests/unit tests/db
      after_success:
        - pip install --quiet coveralls
        - coveralls

    - name: "End to end tests"
      install:
        - pip install --quiet .
        - pip install --quiet -r dev-requirements.txt
      before_script:
        - docker run -d --env POSTGRES_USER=transiter --env POSTGRES_PASSWORD=transiter --env POSTGRES_DB=transiter -p 5432:5432 postgres:12
        - docker run -d -p 5672:5672 rabbitmq:3
        - transiterclt db reset --yes
        - transiterclt launch webservice > webservice.log 2>&1 &
        - transiterclt launch executor > executor.log 2>&1 &
        - transiterclt launch scheduler > scheduler.log  2>&1 &
        - python tests/endtoend/sourceserver.py > sourceserver.log  2>&1 &
      script:
        - pytest --color=yes tests/endtoend
      after_failure:
        - cat webservice.log

    - name: "Database upgrade test"
      install:
        - pip install --quiet .
      before_script:
        - docker run -d --name postgres --env POSTGRES_USER=transiter --env POSTGRES_PASSWORD=transiter --env POSTGRES_DB=transiter -p 5432:5432 postgres:12
        - docker exec postgres pg_restore test/upgrade/dump.sql
      script:
        - transiterclt db upgrade

    - name: "Formatting enforcement"
      install:
        - pip install --quiet black==19.10b pycodestyle==2.5.0
      script:
        - black transiter tests *py
        - pycodestyle --ignore=E203,E501,W503 --exclude="*pb2.py" transiter tests *py

    - stage: "Containerized build and tests"
      name: "CPython 3.8 Docker build and all tests"
      install:
        - pip install --quiet docker
        - python travis.py before
        - make docker-ci
        - docker-compose -p transiter -f docker/docker-compose.yml up -d
      script:
        - make containerized-unit-tests
        - make containerized-db-tests
        - make end-to-end-tests
      after_success:
        - python travis.py after
